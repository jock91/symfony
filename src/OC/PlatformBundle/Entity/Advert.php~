<?php

namespace OC\PlatformBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * Advert
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="OC\PlatformBundle\Entity\AdvertRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Advert
{
	
	/**
	 * @Gedmo\Slug(fields={"title"})
	 * @ORM\Column(length=128, unique=true)
	 */
	  private $slug;
	
	/**
	* @ORM\Column(name="nb_applications", type="integer")
	*/
	private $nbApplications = 0;

	public function increaseApplication()
	{
		$this->nbApplications++;
	}

	public function decreaseApplication()
	{
		$this->nbApplications--;
	}


	/**
	* @ORM\Column(name="update_at", type="datetime", nullable=true)
	*/
	private $updateAt;

	/**
	* @ORM\OneToMany(targetEntity="OC\PlatformBundle\Entity\Application", mappedBy="advert")
	*/
	private $applications;

	/**
	* @ORM\ManyToMany(targetEntity="OC\PlatformBundle\Entity\Category", cascade={"persist"})
	*/
	private $categories;

	/**
	 * @ORM\OneToOne(targetEntity="OC\PlatformBundle\Entity\Image", cascade={"persist"})
	 */
	private $image;


	public function __construct()
	{
		// Par dÃ©faut, la date de l'annonce est la date d'aujourd'hui
		$this->date = new \Datetime();
	}
	/**
	 * @ORM\Column(name="published", type="boolean")
	 */
	private $published = true;

	/**
	 * @var integer
	 *
	 * @ORM\Column(name="id", type="integer")
	 * @ORM\Id
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	private $id;

	/**
	 * @var \DateTime
	 *
	 * @ORM\Column(name="date", type="datetime")
	 */
	private $date;

	/**
	 * @var string
	 *
	 * @ORM\Column(name="title", type="string", length=255)
	 */
	private $title;

	/**
	 * @var string
	 *
	 * @ORM\Column(name="author", type="string", length=255)
	 */
	private $author;

	/**
	 * @var string
	 *
	 * @ORM\Column(name="content", type="text")
	 */
	private $content;


	/**
	 * Get id
	 *
	 * @return integer 
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Set date
	 *
	 * @param \DateTime $date
	 * @return Advert
	 */
	public function setDate($date)
	{
		$this->date = $date;

		return $this;
	}

	/**
	 * Get date
	 *
	 * @return \DateTime 
	 */
	public function getDate()
	{
		return $this->date;
	}

	/**
	 * Set title
	 *
	 * @param string $title
	 * @return Advert
	 */
	public function setTitle($title)
	{
		$this->title = $title;

		return $this;
	}

	/**
	 * Get title
	 *
	 * @return string 
	 */
	public function getTitle()
	{
		return $this->title;
	}

	/**
	 * Set author
	 *
	 * @param string $author
	 * @return Advert
	 */
	public function setAuthor($author)
	{
		$this->author = $author;

		return $this;
	}

	/**
	 * Get author
	 *
	 * @return string 
	 */
	public function getAuthor()
	{
		return $this->author;
	}

	/**
	 * Set content
	 *
	 * @param string $content
	 * @return Advert
	 */
	public function setContent($content)
	{
		$this->content = $content;

		return $this;
	}

	/**
	 * Get content
	 *
	 * @return string 
	 */
	public function getContent()
	{
		return $this->content;
	}

	/**
	 * Set published
	 *
	 * @param boolean $published
	 * @return Advert
	 */
	public function setPublished($published)
	{
		$this->published = $published;

		return $this;
	}

	/**
	 * Get published
	 *
	 * @return boolean 
	 */
	public function getPublished()
	{
		return $this->published;
	}

	/**
	 * Set image
	 *
	 * @param \OC\PlatformBundle\Entity\Image $image
	 * @return Advert
	 */
	public function setImage(\OC\PlatformBundle\Entity\Image $image = null)
	{
		$this->image = $image;

		return $this;
	}

	/**
	 * Get image
	 *
	 * @return \OC\PlatformBundle\Entity\Image 
	 */
	public function getImage()
	{
		return $this->image;
	}

	/**
	 * Add categories
	 *
	 * @param \OC\PlatformBundle\Entity\Category $categories
	 * @return Advert
	 */
	public function addCategory(\OC\PlatformBundle\Entity\Category $categories)
	{
		$this->categories[] = $categories;

		return $this;
	}

	/**
	 * Remove categories
	 *
	 * @param \OC\PlatformBundle\Entity\Category $categories
	 */
	public function removeCategory(\OC\PlatformBundle\Entity\Category $categories)
	{
		$this->categories->removeElement($categories);
	}

	/**
	 * Get categories
	 *
	 * @return \Doctrine\Common\Collections\Collection 
	 */
	public function getCategories()
	{
		return $this->categories;
	}

	/**
	 * Add applications
	 *
	 * @param \OC\PlatformBundle\Entity\Application $applications
	 * @return Advert
	 */
	public function addApplication(\OC\PlatformBundle\Entity\Application $applications)
	{
		$this->applications[] = $applications;

		$applications->setAdvert($this);

		return $this;
	}

	/**
	 * Remove applications
	 *
	 * @param \OC\PlatformBundle\Entity\Application $applications
	 */
	public function removeApplication(\OC\PlatformBundle\Entity\Application $applications)
	{
		$this->applications->removeElement($applications);
	}

	/**
	 * Get applications
	 *
	 * @return \Doctrine\Common\Collections\Collection 
	 */
   public function getApplications()
	{
		return $this->applications;
	}
	public function updateDate() {
		$this->setUpdateAt(new \Datetime());
	}
}
